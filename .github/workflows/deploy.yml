name: CI/CD using actions & docker

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: create deploy directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p /home/ubuntu/deploy

      - name: copy docker-compose.yml
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/deploy/"

      - name: Docker build and push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
        run: docker build --no-cache -t ${DOCKER_USERNAME}/${DOCKER_REPO} .

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PWD}}

      - name: docker Hub push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
        run: docker push ${DOCKER_USERNAME}/${DOCKER_REPO}

  deploy:
    needs: build-docker-image
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> ~/deploy/.env
            echo "DOCKER_REPO=${{ secrets.DOCKER_REPO }}" >> ~/deploy/.env  
            echo "DB_URL=${{ secrets.DB_URL }}" >> ~/deploy/.env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> ~/deploy/.env
            echo "DB_PWD=${{ secrets.DB_PWD }}" >> ~/deploy/.env
            echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> ~/deploy/.env
            echo "JWT_ACCESS_EXPIRATION=${{ secrets.JWT_ACCESS_EXPIRATION }}" >> ~/deploy/.env
            echo "JWT_REFRESH_EXPIRATION=${{ secrets.JWT_REFRESH_EXPIRATION }}" >> ~/deploy/.env
            echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> ~/deploy/.env
            echo "S3_BUCKET=${{ secrets.S3_BUCKET }}" >> ~/deploy/.env
            echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> ~/deploy/.env
            
            sudo docker compose -f ~/deploy/docker-compose.yml down
            sudo docker compose -f ~/deploy/docker-compose.yml pull --ignore-pull-failures
            sudo docker compose -f ~/deploy/docker-compose.yml up -d --force-recreate
            sudo docker image prune -f